namespace CoNexus.Api.Domain;

// Survey publication
public class SurveyPublication : BaseEntity
{
	public int SurveyId { get; private set; }
	public string PublicationName { get; private set; }
	public DateTime PublishedAt { get; private set; }
	public DateTime? ClosedAt { get; private set; }
	public bool IsOpen { get; private set; }

	// Navigation properties
	public virtual Survey Survey { get; private set; }
	public virtual ICollection<UserResponse> Responses { get; private set; }

	private SurveyPublication()
	{
		Responses = new List<UserResponse>();
	}

	public static SurveyPublication Create(int surveyId, string publicationName)
	{
		if (string.IsNullOrWhiteSpace(publicationName))
			throw new ArgumentException("Publication name is required", nameof(publicationName));

		return new SurveyPublication
		{
			// Id will be auto-generated by database
			SurveyId = surveyId,
			PublicationName = publicationName,
			PublishedAt = DateTime.UtcNow,
			IsOpen = true,
			Created = DateTime.UtcNow,
			LastUpdated = DateTime.UtcNow
		};
	}

	public void Close()
	{
		if (!IsOpen)
			throw new InvalidOperationException("Publication is already closed");

		IsOpen = false;
		ClosedAt = DateTime.UtcNow;
		LastUpdated = DateTime.UtcNow;
	}
}
